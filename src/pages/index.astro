---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Badge from "../components/Badge.astro";
import Button from "../components/Button.astro";
import { Icon } from "astro-icon/components";

// Mock data for stacks
import { getStacks } from "../lib/docker/stacks";
const stacks = await getStacks();
---

<Layout title="Stacks">
  <div class="flex justify-between items-center mb-6">
    <h1 class="text-2xl font-bold">Stacks</h1>
    <Button>
      <Icon name="lucide:plus" class="h-4 w-4 mr-2" />
      Create Stack
    </Button>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {stacks.map(stack => (
      <a href={`/stacks/${stack.id}`} class="block">
        <Card class="h-full hover:border-emerald-500 transition-colors">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="text-lg font-medium mb-2">{stack.name}</h3>
              <div class="flex items-center gap-2 mb-4">
                <Badge variant={stack.status === 'running' ? 'success' : stack.status === 'partial' ? 'warning' : 'danger'}>
                  {stack.status}
                </Badge>
                <span class="text-sm text-gray-500 dark:text-gray-400">
                  {stack.services} service{stack.services !== 1 ? 's' : ''}
                </span>
              </div>
            </div>
            <div class="flex items-center">
              {stack.type === 'swarm' ? (
                <Badge variant="info">Swarm</Badge>
              ) : (
                <Badge>Standalone</Badge>
              )}
            </div>
          </div>
          <div class="text-sm text-gray-500 dark:text-gray-400">
            {stack.managedBy === 'panal' ? 'Managed by Panal' : 'External Stack'}
          </div>
        </Card>
      </a>
    ))}
  </div>
</Layout>
